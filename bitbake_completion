#!bash
#
# Bash completion support for Bitbake Build Tool Core version 1.39.0,
# and compatible with Yocto 2.5 (sumo) release.
#
# Copyright (C) 2014 Sergio Prado <sergio.prado@e-labworks.com>
# Copyright (C) 2018 Lukasz Gardon <lukasz.gardon@gmail.com>
#
# Distributed under the MIT License (MIT)
#

_bitbake()
{
    local cur prev opts_short opts_long tasks recipes bbfile_entry recipe ui
    local bblayers_conf bblayers_md5 bblayers_bbfile bblayers_recipes recipe_path

    COMPREPLY=()

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    opts_short="-h -b -k -f -c -C -r -R -v -D -q -n -S -p -s -e -g -I \
                -l -P -u -B -T -m -w"

    opts_long="--version --help --buildfile= --continue --force --cmd= \
               --clear-stamp= --read= --postread= --verbose --debug --quiet \
               --dry-run --dump-signatures= --parse-only --show-versions \
               --environment --graphviz --ignore-deps= --log-domains= --profile \
               --ui= --token= --revisions-changed --server-only --bind= \
               --idle-timeout= --no-setscene --setscene-only --remote-server= \
               --kill-server --observe-only --status-only --write-log= --runall= \
               --runonly="

    tasks="build compile compile_ptest_base configure configure_ptest_base deploy \
           distrodata fetch image image_complete install install_ptest_base package \
           package_qa package_write_deb package_write_ipk package_write_rpm package_write_tar \
           packagedata patch populate_lic populate_sdk populate_sysroot prepare_recipe_sysroot \
           rm_work rm_work_all unpack checkpkg checkuri clean cleanall cleansstate devpyshell \
           devshell listtasks package_index bootimg bundle_initramfs rootfs testimage \
           testimage_auto compile_kernelmodules diffconfig kernel_checkout kernel_configcheck \
           kernel_configme kernel_menuconfig kernel_metadata menuconfig savedefconfig shared_workdir \
           sizecheck strip validate_branches spdx"

    ui="knotty ncurses taskexp"

    if [[ "$prev" == "=" ]]; then
        prev="${COMP_WORDS[COMP_CWORD - 2]}"
    elif [[ "$cur" == "=" ]]; then
        cur=""
    fi

    conf_files=$(find . -maxdepth 1 -name "*.conf" -type f -printf '%P\n')

    case "$prev" in

        "-c"|"--cmd"|"-C"|"--clear-stamp"|"--ignore-deps"|"--runall"|"--runonly")
            COMPREPLY=( $(compgen -W "${tasks}" -- ${cur}) )
            return 0
        ;;

        "-r"|"--read"|"-R"|"--postread")
            COMPREPLY=( $(compgen -W "${conf_files}" -- ${cur}) )
            return 0
        ;;

        "-u"|"--ui")
            COMPREPLY=( $(compgen -W "${ui}" -- ${cur}) )
            return 0
        ;;

    esac

    case "$cur" in

        "--"*)
            COMPREPLY=( $(compgen -W "${opts_long}" -- ${cur}) )
            if [[ ${#COMPREPLY[@]} == 1 && ${COMPREPLY[0]} == "--"*"=" ]] ; then
                compopt -o nospace
            fi
            return 0
        ;;

        "-"*)
            COMPREPLY=( $(compgen -W "${opts_short}" -- ${cur}) )
            return 0
        ;;

    esac

    bblayers_conf="conf/bblayers.conf"
    bblayers_md5=".bblayers.conf.md5"
    bblayers_bbfile=".bblayers.bbfile"
    bblayers_recipes=".bblayers.recipes"

    _parse_recipes () {
        bitbake -s | sed '0,/^=.*/d' > $bblayers_recipes
    }

    if [ ! -e $bblayers_conf ]; then
        return 0
    fi

    if [ "$prev" = "bitbake" -a "$cur" = "" ]; then
	    _parse_recipes
    fi

    md5sum --quiet --status -c $bblayers_md5 2>/dev/null
    if [ $? != 0 -o ! -e $bblayers_recipes ]; then
         md5sum $bblayers_conf > $bblayers_md5
         _parse_recipes
    fi

    recipes=$(cat $bblayers_recipes)

    COMPREPLY=( $(compgen -W "${recipes}" -- ${cur}) )
    return 0
}
complete -F _bitbake bitbake
